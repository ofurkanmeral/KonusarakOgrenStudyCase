// <auto-generated />
using System;
using KonusarakOgren.Data.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KonusarakOgren.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220411094454_inital")]
    partial class inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KonusarakOgren.Entity.Answer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("correct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("optionA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("optionB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("optionC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("optionD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("questionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("questionID");

                    b.ToTable("answers");
                });

            modelBuilder.Entity("KonusarakOgren.Entity.Exam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("KonusarakOgren.Entity.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExamID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ExamID");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("KonusarakOgren.Entity.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("KonusarakOgren.Entity.Answer", b =>
                {
                    b.HasOne("KonusarakOgren.Entity.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("questionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("KonusarakOgren.Entity.Question", b =>
                {
                    b.HasOne("KonusarakOgren.Entity.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("KonusarakOgren.Entity.Exam", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("KonusarakOgren.Entity.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
